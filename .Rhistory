eph4t <- left_join(eph4ti, eph4tih)
eph4t$PP04B_COD <- as.character(eph4t$PP04B_COD)
eph4t$PP11B_COD <- as.character(eph4t$PP11B_COD)
eph4t$PP11D_COD <- as.character(eph4t$PP11D_COD)
eph4t <- eph4t %>%  mutate(PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
OCUPADOS= case_when(ESTADO==1 ~ 1,
ESTADO==2 ~ 0,
ESTADO==3 ~ 0,
ESTADO==4 ~ 0),
DESOCUPADOS= case_when(ESTADO==1 ~ 0,
ESTADO==2 ~ 1),
EMPLEADOS= case_when(PP04A==1 ~ "Empleados Publicos",
PP04A==2 ~ "Empleados privados",
PP04A==3 ~ "Otros",
TRUE ~ NA_character_),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
INFORMALES=case_when( CAT_OCUP==3 & PP07H==2 ~ 1,
CAT_OCUP==3 & PP07H==1 ~ 0),
PP04D_COD = as.character(PP04D_COD),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
TIPOCALIFICACION= case_when(CALIFICACION=="Profesionales" | CALIFICACION== "Técnicos" ~ "Calificado",
CALIFICACION=="No Calificados" | CALIFICACION=="Operativos" ~ "No calificado"))
#Primero se filtra la base
tablapeapt <- eph4t %>% filter (AGLOMERADO==12 & ESTADO!=0)
#Ahora armamos la tabla (cantidad de 1 sobre cantidad de 0 y 1) y se agrupa entre 0 y 1 (PEA==1), ademas se agrega la cantidad de habitantes dentro de la PEA.
tablapeapt <- tablapeapt %>% group_by(PEA) %>%  summarise((formattable::percent(sum(PONDERA)/sum(tablapeapt$PONDERA))), sum(PONDERA), sum(tablapeapt$PONDERA))
tablapeapt
knitr::opts_chunk$set(echo = TRUE)
#Se cargan las librerias necesarias
setwd("~/GitHub/informegenero")
library(ggtext)
library(eph)
library(tidyverse)
library(formattable)
library(Hmisc)
library(readxl)
library(foreign)
library(glue)
library(extrafont)
library(ggalt)
library(waffle)
library(ggimage)
library(spatstat)
library(splitstackshape)
library(purrr)
library(treemapify)
library(scales)
library(data.table)
library(diffdf)
library(vctrs)
font_import(paths = "~/GitHub/informegenero/Open_Sans")
loadfonts(device = "win", quiet=T)
#Segundo trimestre 2020
aglomerados<-read_excel("aglomerado.xlsx", sheet = 4)
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
gradiente1<- c("#13c753","#0e9840","#0a6a2c","#085222")
gradiente2<- c("#6dc8ed","#40b7e7","#1ba2d8", "#1680ab")
ephi<- get_microdata(year=2020, trimester = 3, type = "individual")
ephh <- get_microdata(year=2020, trimester = 3, type = "hogar")
canastas<- read.csv("canasta.csv", sep=";", dec=".", header = TRUE)
eph3t<- left_join(ephi, ephh)
ephi<- get_microdata(year=2020, trimester = 2, type = "individual")
ephh <- get_microdata(year=2020, trimester = 2, type = "hogar")
eph2t<- left_join(ephi,ephh)
##Arreglo de  clases
#clases<- diffdf(eph3t,eph2t)
#clases<- clases$VarClassDiffs %>% unnest(CLASS.BASE) %>% unnest(CLASS.COMP)
#nombres<- clases$VARIABLE
#eph3t2 <- eph3t %>% select(all_of(nombres))
#eph3t2[]<- lapply(eph3t2,as.character)
#eph3t<- eph3t %>% select(-nombres)
#eph3t<- bind_cols(eph3t,eph3t2)
#####################################
ephs<- bind_rows(eph3t,eph2t)
ephs<- left_join(ephs,aglomerados)
ephs<- left_join(ephs,eph::adulto_equivalente)
ephs<- left_join(ephs,canastas)
ephs <- ephs %>%filter(ESTADO!=0)  %>%    mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
Vacaciones = case_when(PP07G1 == 1 ~ "Sí",
PP07G1 == 2 ~ "No"),
Aguinaldo = case_when(PP07G2 == 1 ~ "Sí",
PP07G2 == 2 ~ "No"),
Diasporenfermedad = case_when(PP07G3 == 1 ~ "Sí",
PP07G3 == 2 ~ "No"),
Obrasocial = case_when(PP07G4 == 1 ~ "Sí",
PP07G4 == 2 ~ "No"),
Descuentojubilatorio = case_when(PP07H == 1 ~ "Sí",
PP07H == 2 ~ "No"),
CH14=as.numeric(CH14),
añoalc=case_when(CH14 %in% c(98,99)~ NaN ,
TRUE ~ CH14),
aeduc=case_when(CH12==1 ~ 0,
CH12==2 & CH13==2~añoalc,
CH12==2 & CH13==1 ~ 6,
CH12==3 & CH13==2 ~ añoalc,
CH12==3 & CH13==1 ~ 9,
CH12==4 & CH13==2 ~ 6+añoalc,
CH12==4 & CH13==1 ~ 12,
CH12==5 & CH13==2 ~ 9+añoalc,
CH12==5 & CH13==1 ~ 12,
CH12 %in% c(6,7) & CH13==2 ~ 12+añoalc,
CH12==6 & CH13==1 ~ 16,
CH12==7 & CH13==1 ~ 17,
CH12==8 & CH13==2 ~ 17+añoalc,
CH12==8 & CH13==1 ~ 21),
edad=case_when(CH06>=18 & CH06<29 ~ "18 a 28",
CH06>=29 & CH06<40 ~ "29 a 39",
CH06>=40 & CH06<51 ~ "40 a 50",
CH06>=51 & CH06<62 ~ "51 a 61",
CH06>=61 ~ "61+"),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
PONDERA= PONDERA/2,
P21= P21 - PP08J1,
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")),
JEFE = case_when(CH03==1 ~ 1,
CH03 %in% c(2,3,4,5,6,7,8,9,10) ~ 0),
HIJO = case_when(CH03==3 ~ 1,
CH03 %in% c(1,2,4,5,6,7,8,9,10) ~ 0))
caes<- read.csv("SECTORESCAES.csv", sep = ";", colClasses = "character")
ephs<- left_join(ephs,caes)
eahu <- read.dta("Individual_EAHU_13.dta")
etnr <- read.dta("microdatos_TNR.dta" )
eahutotal <- left_join(etnr, eahu, by=c("CODUSU", "componente", "nro_hogar", "ano4"))
eahutotal <- eahutotal %>%  mutate(Sexo=as.character(ch04),
Sexo=case_when(Sexo=="Varón" ~ "Hombres",
Sexo=="Mujer" ~ "Mujeres"),
horassemanalestnr= tiempo_tdnr*7,
horassemanalestr=pp3e_tot+pp3f_tot,
edad=case_when(ch06>=18 & ch06<29 ~ "18 a 28",
ch06>=29 & ch06<40 ~ "29 a 39",
ch06>=40 & ch06<51 ~ "40 a 50",
ch06>=51 & ch06<62 ~ "51 a 61",
ch06>=61 ~ "61+"))
masde15 <- ephs %>%  filter(CH06>=15 & AGLOMERADO==12 & ESTADO!=0)
masde15  %>% group_by(Sexo) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(masde15$PONDERA)),2), sum(PONDERA))
inactivas <- ephs %>% filter (CH06>=15 & AGLOMERADO==12 & ESTADO==3)
inactivas %>% group_by(Sexo) %>% summarise((sum(PONDERA)/sum(inactivas$PONDERA)), sum(PONDERA))
knitr::opts_chunk$set(echo = TRUE)
library(ggchicklet)
install.packages("ggchicklet")
library(ggchicklet)
library(ggtext)
library(eph)
library(tidyverse)
library(formattable)
library(Hmisc)
library(readxl)
library(foreign)
library(glue)
library(extrafont)
library(ggalt)
library(waffle)
library(ggimage)
library(spatstat)
library(splitstackshape)
library(purrr)
library(treemapify)
library(scales)
library(forcats)
#Fuente
font_import(paths = "~/GitHub/informegenero/Open_Sans")
library(ggtext)
library(eph)
library(tidyverse)
library(formattable)
library(Hmisc)
library(readxl)
library(foreign)
library(glue)
library(extrafont)
library(ggalt)
library(waffle)
library(ggimage)
library(spatstat)
library(splitstackshape)
library(purrr)
library(treemapify)
library(scales)
library(forcats)
#Fuente
font_import(paths = "~/GitHub/informegenero/Open_Sans")
loadfonts(device = "win", quiet=T)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
#Cuarto trimestre 2020
eph4ti<- get_microdata(year=2020, trimester=4, type="individual")
eph4tih <- get_microdata(year=2020, trimester=4, type="hogar")
eph4t <- left_join(eph4ti, eph4tih)
eph4t$PP04B_COD <- as.character(eph4t$PP04B_COD)
eph4t$PP11B_COD <- as.character(eph4t$PP11B_COD)
eph4t$PP11D_COD <- as.character(eph4t$PP11D_COD)
eph4t <- eph4t %>%  mutate(PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
OCUPADOS= case_when(ESTADO==1 ~ 1,
ESTADO==2 ~ 0,
ESTADO==3 ~ 0,
ESTADO==4 ~ 0),
DESOCUPADOS= case_when(ESTADO==1 ~ 0,
ESTADO==2 ~ 1),
EMPLEADOS= case_when(PP04A==1 ~ "Empleados Publicos",
PP04A==2 ~ "Empleados privados",
PP04A==3 ~ "Otros",
TRUE ~ NA_character_),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
INFORMALES=case_when( CAT_OCUP==3 & PP07H==2 ~ 1,
CAT_OCUP==3 & PP07H==1 ~ 0),
PP04D_COD = as.character(PP04D_COD),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
TIPOCALIFICACION= case_when(CALIFICACION=="Profesionales" | CALIFICACION== "Técnicos" ~ "Calificado",
CALIFICACION=="No Calificados" | CALIFICACION=="Operativos" ~ "No calificado"))
#Primero se filtra la base
tablapeapt <- eph4t %>% filter (AGLOMERADO==12 & ESTADO!=0)
#Ahora armamos la tabla (cantidad de 1 sobre cantidad de 0 y 1) y se agrupa entre 0 y 1 (PEA==1), ademas se agrega la cantidad de habitantes dentro de la PEA.
tablapeapt <- tablapeapt %>% group_by(PEA) %>%  summarise((formattable::percent(sum(PONDERA)/sum(tablapeapt$PONDERA))), sum(PONDERA), sum(tablapeapt$PONDERA))
tablapeapt
tablapeasexo<- eph4t %>% filter (AGLOMERADO==12 & ESTADO!=0 & PEA==1)
tablapeasexo <- tablapeasexo %>% group_by(CH04) %>%  summarise(sum(PONDERA), formattable::percent(sum(PONDERA)/sum(tablapeasexo$PONDERA)))
tablapeasexo
#Proporcion de mujeres que conforman la PEA sobre el total de mujeres:
tablapeamujeres <- eph4t %>%  filter(AGLOMERADO==12 & ESTADO!=0 & CH04==2)
tablapeamujeres <- tablapeamujeres %>% group_by(PEA) %>%  summarise(sum(PONDERA)/sum(tablapeamujeres$PONDERA), sum(PONDERA))
tablapeamujeres
#Proporcion de hombres que conforman la PEA sobre el total de hombres:
tablapeahombres <- eph4t %>%  filter(AGLOMERADO==12 & ESTADO!=0 & CH04==1)
tablapeahombres <- tablapeahombres %>% group_by(PEA) %>% summarise(sum(PONDERA)/sum(tablapeahombres$PONDERA), sum(PONDERA))
tablapeahombres
#15-24 años
edad15a24 <- eph4t %>% filter(AGLOMERADO==12 & ESTADO!=0 & CH06<=24 & CH06>=15)
#Hombres
hombres15 <- edad15a24 %>%  filter(CH04==1)
hombres15 <- hombres15 %>%  group_by(PEA) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(hombres15$PONDERA)),2), Sexo="Hombres", Edad="15-24")
hombres15
hombresact15 <- hombres15 %>% filter(PEA==1)  %>% select(-PEA)
hombresact15
#Mujeres
mujeres15 <- edad15a24 %>%  filter(CH04==2)
mujeres15 <- mujeres15 %>%  group_by(PEA) %>%  summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(mujeres15$PONDERA)),2), Sexo="Mujeres", Edad="15-24")
mujeres15
mujeresact15 <- mujeres15 %>% filter(PEA==1)  %>% select(-PEA)
mujeresact15
act15a24 <- bind_rows(hombresact15, mujeresact15)
act15a24
#25-34 años
edad25a34 <- eph4t %>% filter(AGLOMERADO==12 & ESTADO!=0 & CH06<=34 & CH06>=25)
#Hombres
hombres25 <- edad25a34 %>%  filter(CH04==1)
hombres25 <- hombres25 %>%  group_by(PEA) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(hombres25$PONDERA)),2), Sexo="Hombres", Edad="25-34")
hombres25
hombresact25 <- hombres25 %>% filter(PEA==1) %>% select(-PEA)
hombresact25
#Mujeres
mujeres25 <- edad25a34 %>%  filter(CH04==2)
mujeres25 <- mujeres25 %>%  group_by(PEA) %>%  summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(mujeres25$PONDERA)),2), Sexo="Mujeres", Edad="25-34")
mujeres25
mujeresact25 <- mujeres25 %>% filter(PEA==1) %>% select(-PEA)
mujeresact25
act25a34 <- bind_rows(hombresact25, mujeresact25)
act25a34
#35-44
edad35a44 <- eph4t %>% filter(AGLOMERADO==12 & ESTADO!=0 & CH06<=44 & CH06>=35)
#Hombres
hombres35 <- edad35a44 %>%  filter(CH04==1)
hombres35 <- hombres35 %>%  group_by(PEA) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(hombres35$PONDERA)),2), Sexo="Hombres", Edad="35-44")
hombres35
hombresact35 <- hombres35 %>% filter(PEA==1) %>% select(-PEA)
hombresact35
#Mujeres
mujeres35 <- edad35a44 %>%  filter(CH04==2)
mujeres35 <- mujeres35 %>%  group_by(PEA) %>%  summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(mujeres35$PONDERA)),2), Sexo="Mujeres", Edad="35-44")
mujeres35
mujeresact35 <- mujeres35 %>% filter(PEA==1) %>% select(-PEA)
mujeresact35
act35a44 <- bind_rows(hombresact35, mujeresact35)
act35a44
#45-59
edad45a59 <- eph4t %>% filter(AGLOMERADO==12 & ESTADO!=0 & CH06<=59 & CH06>=45)
#Hombres
hombres45 <- edad45a59 %>%  filter(CH04==1)
hombres45 <- hombres45 %>%  group_by(PEA) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(hombres45$PONDERA)),2), Sexo="Hombres", Edad="45-59")
hombres45
hombresact45 <- hombres45 %>% filter(PEA==1) %>% select(-PEA)
hombresact45
#Mujeres
mujeres45 <- edad45a59 %>%  filter(CH04==2)
mujeres45 <- mujeres45 %>%  group_by(PEA) %>%  summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(mujeres45$PONDERA)),2), Sexo="Mujeres", Edad="45-59")
mujeres45
mujeresact45 <- mujeres45 %>% filter(PEA==1) %>% select(-PEA)
mujeresact45
act45a59 <- bind_rows(hombresact45, mujeresact45)
act45a59
#Mayores o iguales a 60 años
edad60 <- eph4t %>% filter(AGLOMERADO==12 & ESTADO!=0 & CH06>=60)
#Hombres
hombres60 <- edad60 %>%  filter(CH04==1)
hombres60 <- hombres60 %>%  group_by(PEA) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(hombres60$PONDERA)),2), Sexo="Hombres", Edad="Mayores o iguales a 60")
hombres60
hombresact60 <- hombres60 %>% filter(PEA==1) %>% select(-PEA)
hombresact60
#Mujeres
mujeres60 <- edad60 %>%  filter(CH04==2)
mujeres60 <- mujeres60 %>%  group_by(PEA) %>%  summarise(porcentaje=formattable::percent((sum(PONDERA)/sum(mujeres60$PONDERA)),2), Sexo="Mujeres", Edad="Mayores o iguales a 60")
mujeres60
mujeresact60 <- mujeres60 %>% filter(PEA==1) %>% select(-PEA)
mujeresact60
act60 <- bind_rows(hombresact60, mujeresact60)
act60
#TABLA
activsgraf <- bind_rows(act15a24, act25a34, act35a44, act45a59, act60)
activsgraf
activsgraf %>% pivot_wider(names_from = "Sexo", values_from= "porcentaje")
grafico1 <- activsgraf %>% ggplot(mapping = aes(x=Edad, y=porcentaje, fill=Sexo)) +
geom_col(position = position_dodge(width = 0.75), width=0.7) + scale_fill_manual(values=colores) + scale_y_continuous(labels = percent, limits = c(0,1)) + labs(y = "Tasa de participación laboral", title ="Participación laboral por sexo y edad", subtitle ="Tercer trimestre 2020") + theme(text = element_text(family = "Open Sans"), plot.title = element_text(size = 14), plot.title.position = "plot", plot.subtitle = element_text(size = 8), axis.title = element_text(size=8), legend.position = "bottom", legend.text = element_text(size = 8), legend.title = element_blank(), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
grafico1
grafico1 <- activsgraf %>% ggplot(mapping = aes(x=Edad, y=porcentaje, fill=Sexo)) +
geom_col(position = position_dodge(width = 0.75), lineend="round", width=0.7) + scale_fill_manual(values=colores) + scale_y_continuous(labels = percent, limits = c(0,1)) + labs(y = "Tasa de participación laboral", title ="Participación laboral por sexo y edad", subtitle ="Tercer trimestre 2020") + theme(text = element_text(family = "Open Sans"), plot.title = element_text(size = 14), plot.title.position = "plot", plot.subtitle = element_text(size = 8), axis.title = element_text(size=8), legend.position = "bottom", legend.text = element_text(size = 8), legend.title = element_blank(), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
grafico1
empleados <- eph4t %>% filter(AGLOMERADO==12 & !is.na(EMPLEADOS) & OCUPADOS==1)
table(empleados$EMPLEADOS)
empleados <- empleados %>%  group_by(EMPLEADOS) %>%  summarise(sum(PONDERA))
empleados
empleados <- empleados %>% filter(EMPLEADOS!="Otros") %>% mutate(porcentaje=(`sum(PONDERA)`/sum(empleados$`sum(PONDERA)`))) %>% select(EMPLEADOS, porcentaje) %>% mutate(numeros=round(porcentaje*100,0))
empleados
empleadosacum <- cumsum(empleados$porcentaje)
empleadosacum
empleadosacummin <- formattable::percent(c(0, head(empleadosacum, n=-1)))
empleadosacummin
#Waffle
grafico5 <- empleados %>% ggplot(mapping = aes(fill=EMPLEADOS, values=numeros)) +  geom_waffle(n_rows=10, size=1.1, show.legend = F, colour = "white") + theme_void() +scale_fill_manual(values = colores) +  labs(title="Composición del empleo por sectores <span style = 'color: #29aee4;'>**privado**</span> y <span style='color: #0c8136;'>**público**</span> ", subtitle = "Tercer trimestre 2020") + theme(plot.title = element_markdown(), text = element_text(family = "Open Sans"), plot.title.position = "plot" )
#Waffle
grafico5 <- empleados %>% ggplot(mapping = aes(fill=EMPLEADOS, values=numeros)) +  geom_waffle(n_rows=10, size=1.1, show.legend = F, colour = "white") + theme_void() +scale_fill_manual(values = colores) +  labs(title="Composición del empleo por sectores <span style = 'color: #29aee4;'>**privado**</span> y <span style='color: #0c8136;'>**público**</span> ", subtitle = "Tercer trimestre 2020") + theme(plot.title = element_markdown(), text = element_text(family = "Open Sans"), plot.title.position = "plot" )
library(waffle)
#Waffle
grafico5 <- empleados %>% ggplot(mapping = aes(fill=EMPLEADOS, values=numeros)) +  geom_waffle(n_rows=10, size=1.1, show.legend = F, colour = "white") + theme_void() +scale_fill_manual(values = colores) +  labs(title="Composición del empleo por sectores <span style = 'color: #29aee4;'>**privado**</span> y <span style='color: #0c8136;'>**público**</span> ", subtitle = "Tercer trimestre 2020") + theme(plot.title = element_markdown(), text = element_text(family = "Open Sans"), plot.title.position = "plot" )
library(ggtext)
library(eph)
library(tidyverse)
library(formattable)
library(Hmisc)
library(readxl)
library(foreign)
library(glue)
library(extrafont)
library(ggalt)
library(waffle)
library(ggimage)
library(spatstat)
library(splitstackshape)
library(purrr)
library(treemapify)
library(scales)
library(forcats)
#Fuente
font_import(paths = "~/GitHub/informegenero/Open_Sans")
loadfonts(device = "win", quiet=T)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
#Cuarto trimestre 2020
eph4ti<- get_microdata(year=2020, trimester=4, type="individual")
eph4tih <- get_microdata(year=2020, trimester=4, type="hogar")
eph4t <- left_join(eph4ti, eph4tih)
eph4t$PP04B_COD <- as.character(eph4t$PP04B_COD)
eph4t$PP11B_COD <- as.character(eph4t$PP11B_COD)
eph4t$PP11D_COD <- as.character(eph4t$PP11D_COD)
eph4t <- eph4t %>%  mutate(PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
OCUPADOS= case_when(ESTADO==1 ~ 1,
ESTADO==2 ~ 0,
ESTADO==3 ~ 0,
ESTADO==4 ~ 0),
DESOCUPADOS= case_when(ESTADO==1 ~ 0,
ESTADO==2 ~ 1),
EMPLEADOS= case_when(PP04A==1 ~ "Empleados Publicos",
PP04A==2 ~ "Empleados privados",
PP04A==3 ~ "Otros",
TRUE ~ NA_character_),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
INFORMALES=case_when( CAT_OCUP==3 & PP07H==2 ~ 1,
CAT_OCUP==3 & PP07H==1 ~ 0),
PP04D_COD = as.character(PP04D_COD),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
TIPOCALIFICACION= case_when(CALIFICACION=="Profesionales" | CALIFICACION== "Técnicos" ~ "Calificado",
CALIFICACION=="No Calificados" | CALIFICACION=="Operativos" ~ "No calificado"))
#Waffle
grafico5 <- empleados %>% ggplot(mapping = aes(fill=EMPLEADOS, values=numeros)) +  geom_waffle(n_rows=10, size=1.1, show.legend = F, colour = "white") + theme_void() +scale_fill_manual(values = colores) +  labs(title="Composición del empleo por sectores <span style = 'color: #29aee4;'>**privado**</span> y <span style='color: #0c8136;'>**público**</span> ", subtitle = "Tercer trimestre 2020") + theme(plot.title = element_markdown(), text = element_text(family = "Open Sans"), plot.title.position = "plot" )
knitr::opts_chunk$set(echo = TRUE)
library(ggtext)
library(eph)
library(tidyverse)
library(formattable)
library(Hmisc)
library(readxl)
library(foreign)
library(glue)
library(extrafont)
library(ggalt)
library(waffle)
library(ggimage)
library(spatstat)
library(splitstackshape)
library(purrr)
library(treemapify)
library(scales)
library(forcats)
library(svglite)
library(ggchicklet)
library(ggpubr)
#Fuente
font_import(paths = "~/GitHub/informegenero/Open_Sans")
loadfonts(device = "win", quiet=T)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
#Cuarto trimestre 2020
eph1ti<- get_microdata(year=2021, trimester=1, type="individual")
eph4tih <- get_microdata(year=2021, trimester=1, type="hogar")
eph1t <- left_join(eph1ti, eph1tih)
#Fuente
font_import(paths = "~/GitHub/informegenero/Open_Sans", prompt = F)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
eph1t <- left_join(eph1ti, eph1tih)
eph1ti<- get_microdata(year=2021, trimester=1, type="individual")
