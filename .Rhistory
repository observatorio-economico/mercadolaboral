#15-24 años
horastrab15 <- eph1t %>%
filter (AGLOMERADO==12 & ESTADO!=0 & CH06<=24 & CH06>=15 & !is.na(horastrabtotales))
horastrab15 <- horastrab15 %>%  group_by(SEXO) %>% summarise(horas=horastrabtotales%*%PONDERA/sum(PONDERA), Edad= "15-24 años") %>%
arrange(horas) %>%
mutate(Brecha=horas- lag(horas, default = first(horas)))
brecha15= round(as.numeric(horastrab15[2, "Brecha"]),2)
horastrab15 <- horastrab15 %>% mutate(Brecha= brecha15)
horastrab25 <- eph1t %>% filter (AGLOMERADO==12 & ESTADO!=0 & CH06<=34 & CH06>=25 & !is.na(horastrabtotales))
horastrab25 <- horastrab25 %>%  group_by(SEXO) %>% summarise(horas=horastrabtotales%*%PONDERA/sum(PONDERA), Edad="25-34 años") %>%
arrange(horas) %>%
mutate(Brecha=horas- lag(horas, default = first(horas)))
brecha25= round(as.numeric(horastrab25[2, "Brecha"]),2)
horastrab25 <- horastrab25 %>% mutate(Brecha= brecha25)
#35 a 44
horastrab35 <- eph1t %>% filter (AGLOMERADO==12 & ESTADO!=0 & CH06<=44 & CH06>=35 & !is.na(horastrabtotales))
horastrab35 <- horastrab35 %>%  group_by(SEXO) %>% summarise(horas=horastrabtotales%*%PONDERA/sum(PONDERA), Edad="35-44 años") %>%
arrange(horas) %>%
mutate(Brecha=horas- lag(horas, default = first(horas)))
brecha35= round(as.numeric(horastrab35[2, "Brecha"]),2)
horastrab35 <- horastrab35 %>% mutate(Brecha= brecha35)
#45 a 59
horastrab45 <- eph1t %>% filter (AGLOMERADO==12 & ESTADO!=0 & CH06<=59 & CH06>=45 & !is.na(horastrabtotales))
horastrab45 <- horastrab45 %>%  group_by(SEXO) %>% summarise(horas=horastrabtotales%*%PONDERA/sum(PONDERA), Edad="45-59 años")
horastrab45 <- horastrab45 %>%
arrange(horas) %>%
mutate(Brecha=horas- lag(horas, default = first(horas)))
brecha45= round(as.numeric(horastrab45[2, "Brecha"]),2)
horastrab45 <- horastrab45 %>% mutate(Brecha= brecha45)
#mayores de 60
horastrab60 <- eph1t %>% filter (AGLOMERADO==12 & ESTADO!=0 & CH06>=60 & !is.na(horastrabtotales))
horastrab60 <- horastrab60 %>%  group_by(SEXO) %>% summarise(horas=horastrabtotales%*%PONDERA/sum(PONDERA), Edad="Igual o mayor a 60 años")
horastrab60 <- horastrab60 %>%
arrange(horas) %>%
mutate(Brecha=horas- lag(horas, default = first(horas)))
brecha60= round(as.numeric(horastrab60[2, "Brecha"]),2)
horastrab60 <- horastrab60 %>% mutate(Brecha= brecha60)
horastrabajadas <- bind_rows(horastrab15, horastrab25, horastrab35, horastrab45, horastrab60)
horastrabajadas
#### Totales
#Total mujeres y hombres
horastrab <- eph1t %>% filter (AGLOMERADO==12 & ESTADO!=0 & !is.na(horastrabtotales))
horastrab <- horastrab %>%  group_by(SEXO) %>% summarise(horastrabtotales%*%PONDERA/sum(PONDERA))
horastrab
#Total de la poblacion
horastrab <- eph1t %>% filter (AGLOMERADO==12 & ESTADO!=0 & !is.na(horastrabtotales))
horastrab <- horastrab %>% summarise(horastrabtotales%*%PONDERA/sum(PONDERA))
horastrab
tablakg_4 <- horastrabajadas  %>%  pivot_wider(names_from = SEXO, values_from = horas) %>% mutate(Hombres=round(Hombres, 2), Mujeres=round(Mujeres, 2))
col_order <- c("Edad", "Hombres", "Mujeres", "Brecha")
tablakg_4 <- tablakg_4[, col_order]
tablakg_4 %>%
kbl(caption="Carga laboral semanal por sexo y edad", booktabs = T) %>%
kable_styling(latex_options = c("striped"), font_size = 9, position = "center") %>%
row_spec(0, color = "white", bold = TRUE, background="#29aee4", font_size = 12) %>%
row_spec(seq(1,nrow(tablakg_4),2), background="#F0FFFF") %>%
column_spec(1, width = "12em") %>%
column_spec(2, width = "10em") %>%
column_spec(3, width = "10em") %>%
column_spec(4, width = "10em")
#Grafico 3
#Tabla para gráfico
horastrabajadasgr <- horastrabajadas %>% mutate(horas=round(horas))
horastrabajadasgr <- horastrabajadasgr %>% pivot_wider(names_from = SEXO, values_from = horas)
horastrabajadasgr <- horastrabajadasgr %>% filter(Edad != "Igual o mayor a 60 años") #se filtra para graficar SOLO para este trimestre pq los valores dan iguales, por lo tanto, no queda bien en el gráfico.
horastrabajadas_hombres <- horastrabajadas %>% filter(SEXO=="Hombres") %>% mutate(horas=round(horas))
horastrabajadas_mujeres <- horastrabajadas %>% filter(SEXO=="Mujeres") %>% mutate(horas=round(horas))
grafico3<- horastrabajadasgr %>% ggplot() + geom_dumbbell(aes(y=Edad, x=Mujeres, xend=Hombres),
size=1.2, color="#b2b2b2", size_x=3, size_xend = 3, colour_x =colores[2], colour_xend =colores[1])+
geom_text(aes(x=Mujeres, y=Edad, label=Mujeres), color="BLACK", size=2.75, vjust=2.5, family="Open Sans") +
geom_text(aes(x=Hombres, y=Edad, label=Hombres), color="BLACK", size=2.75, vjust=2.5, family="Open Sans") +
labs(fill="", title = "Carga laboral semanal por edad de <span style='color: #29aee4;'>**Hombres**</span> y <span style='color: #0c8136;'>**Mujeres**</span>", subtitle = "Primer trimestre de 2022", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con \ndatos obtenidos de INDEC.</span> ", x="Horas trabajadas") +
ylab("")  +
theme(axis.title = element_text(), aspect.ratio=0.5, axis.text = element_text(color = "BLACK"), legend.position = "right", title = element_text(), panel.grid.major = element_blank(), legend.text = element_text(), panel.background = element_blank())  +
scale_fill_manual(values = colores, aesthetics = "color")  +
labs(color="") +
theme(legend.key = element_blank(), panel.grid.major.y =  element_line(colour = "BLACK", linetype = "dotted"), axis.text.y = element_text(hjust = 0), plot.title.position = "plot", plot.title = element_markdown(), text = element_text(family = "Open Sans" ), plot.caption = element_markdown(size=8))
grafico3
ggsave("grafico3.svg")
## Tasas
### Tasa de empleo
empleo <- eph1t %>% filter(AGLOMERADO==12 & !is.na(OCUPADOS))
empleo <- empleo %>%  group_by(OCUPADOS) %>%  summarise(formattable::percent(sum(PONDERA)/sum(empleo$PONDERA)))
empleo
### Tasa de desocupación
desocupacion <- eph1t %>% filter(AGLOMERADO==12 & !is.na(DESOCUPADOS))
desocupacion <- desocupacion %>%  group_by(DESOCUPADOS) %>%  summarise(formattable::percent(sum(PONDERA)/sum(desocupacion$PONDERA)))
desocupacion
empleo
desocupacion
#Graficos evolución desocupación y empleo
#Para el gráfico se importa el csv con la evolución de las tasas de empleo y desocupación
Tasas<-read.csv("tasas_empleo_desocupacion.csv", sep = ";", colClasses = "character")
Tasas$empleo <- as.numeric(Tasas$empleo)
Tasas$desocupacion <- as.numeric(Tasas$desocupacion)
Tasas <- Tasas %>% mutate(fecha=seq(as.Date("2016/05/01"), by = "quarter", length.out = 23) )
#Para el gráfico se importa el csv con la evolución de las tasas de empleo y desocupación
Tasas<-read.csv("tasas_empleo_desocupacion.csv", sep = ";", colClasses = "character")
Tasas$empleo <- as.numeric(Tasas$empleo)
Tasas$desocupacion <- as.numeric(Tasas$desocupacion)
Tasas <- Tasas %>% mutate(fecha=seq(as.Date("2016/05/01"), by = "quarter", length.out = 24) )
grafico4 <- Tasas %>%  ggplot(aes(x=fecha, y=empleo)) +
geom_col(size=1, show.legend = F, fill="#1ba2d8") +
geom_line(aes(x=fecha, y=desocupacion, group = 1), color="#0c8136", size=1) +
scale_y_continuous(limits = c(0,0.5), labels = percent_format(accuracy = 1.)) +
labs(y = "", title ="Evolución de Tasas 2016-2021", subtitle ="<span style = 'color:  #1ba2d8 ;'>**Empleo**</span> y <span style='color: #0c8136;'>**Desocupación**</span>", x="", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con \ndatos obtenidos de INDEC.</span> ") +
theme(text = element_text(family = "Open Sans"), plot.title = element_markdown(size=14), plot.title.position = "plot", plot.subtitle = element_markdown(size = 8), axis.title = element_text(size=8), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(), legend.title = element_blank(), legend.position = "bottom", aspect.ratio = (0.5), axis.text.x=element_text(angle=60, hjust=1), plot.caption = element_markdown(size = 8)) +
scale_color_manual(values = colores) +
scale_x_date(date_breaks = "4 month", date_labels = "%B %Y")
grafico4
#Graficos evolución desocupación y empleo
#Para el gráfico se importa el csv con la evolución de las tasas de empleo y desocupación
Tasas<-read.csv("tasas_empleo_desocupacion.csv", sep = ";", colClasses = "character")
Tasas$empleo <- as.numeric(Tasas$empleo)
Tasas$desocupacion <- as.numeric(Tasas$desocupacion)
Tasas <- Tasas %>% mutate(fecha=seq(as.Date("2016/05/01"), by = "quarter", length.out = 24) )
ggsave("grafico4.svg")
#Graficos evolución desocupación y empleo
#Para el gráfico se importa el csv con la evolución de las tasas de empleo y desocupación
Tasas<-read.csv("tasas_empleo_desocupacion.csv", sep = ";", colClasses = "character")
Tasas$empleo <- as.numeric(Tasas$empleo)
Tasas$desocupacion <- as.numeric(Tasas$desocupacion)
Tasas <- Tasas %>% mutate(fecha=seq(as.Date("2016/05/01"), by = "quarter", length.out = 24) )
grafico4 <- Tasas %>%  ggplot(aes(x=fecha, y=empleo)) +
geom_col(size=1, show.legend = F, fill="#1ba2d8") +
geom_line(aes(x=fecha, y=desocupacion, group = 1), color="#0c8136", size=1) +
scale_y_continuous(limits = c(0,0.5), labels = percent_format(accuracy = 1.)) +
labs(y = "", title ="Evolución de Tasas 2016-2022", subtitle ="<span style = 'color:  #1ba2d8 ;'>**Empleo**</span> y <span style='color: #0c8136;'>**Desocupación**</span>", x="", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con \ndatos obtenidos de INDEC.</span> ") +
theme(text = element_text(family = "Open Sans"), plot.title = element_markdown(size=14), plot.title.position = "plot", plot.subtitle = element_markdown(size = 8), axis.title = element_text(size=8), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(), legend.title = element_blank(), legend.position = "bottom", aspect.ratio = (0.5), axis.text.x=element_text(angle=60, hjust=1), plot.caption = element_markdown(size = 8)) +
scale_color_manual(values = colores) +
scale_x_date(date_breaks = "4 month", date_labels = "%B %Y")
grafico4
ggsave("grafico4.svg")
### Cantidad de empleados
empleados <- eph1t %>% filter(AGLOMERADO==12 & !is.na(EMPLEADOS) & OCUPADOS==1)
table(empleados$EMPLEADOS) #Se filtra al tipo "otros"
empleados <- empleados %>% filter(EMPLEADOS!="Otros") %>%
group_by(EMPLEADOS) %>%
summarise(sum(PONDERA))
empleados <- empleados  %>% mutate(porcentaje=(`sum(PONDERA)`/sum(empleados$`sum(PONDERA)`))) %>%
select(EMPLEADOS, porcentaje) %>%
mutate(numeros=round(porcentaje*100,0))
empleados
empleados
#Grafico 5
#remotes::install_github("hrbrmstr/waffle")
grafico5 <- empleados %>% ggplot(mapping = aes(fill=EMPLEADOS, values=numeros)) +
geom_waffle(n_rows=10, size=1.1, show.legend = F, colour = "white") +
theme_void() +
scale_fill_manual(values = colores) +
labs(title="Composición del empleo <span style = 'color: #29aee4;'>**privado**</span> y <span style='color: #0c8136;'>**público**</span> ", subtitle = "Primer trimestre de 2022", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con \ndatos obtenidos de INDEC.</span> ") +
theme(plot.title = element_markdown(size=14), text = element_text(family = "Open Sans"),  plot.title.position = "plot", plot.caption = element_markdown(size = 8))
grafico5
ggsave("grafico5.svg")
### Promedio de edad
promedioedad<- eph1t %>% filter(AGLOMERADO==12 &  OCUPADOS==1)
promedioedad<- promedioedad %>% group_by(EMPLEADOS) %>% summarise((CH06%*%PONDERA)/sum(PONDERA))
promedioedad
promedioedad
### Carga laboral
#Sector público
cargalaboralpub <- eph1t %>% filter (AGLOMERADO==12 & ESTADO!=0 & !is.na(horastrabtotales) & PP04A==1)
cargalaboralpub <- cargalaboralpub %>% summarise(horastrabtotales%*%PONDERA/sum(PONDERA))
cargalaboralpub
#Sector privado
cargalaboralpriv <- eph1t %>% filter (AGLOMERADO==12 & ESTADO!=0 & !is.na(horastrabtotales) & PP04A==2)
cargalaboralpriv <- cargalaboralpriv %>% summarise(horastrabtotales%*%PONDERA/sum(PONDERA))
cargalaboralpriv
cargalaboralpub
cargalaboralpriv
cargalaboralpub
### Calificación
#Sector público
clasificacionepub<- eph1t %>% filter(AGLOMERADO==12 & !is.na(CALIFICACION) & PP04A==1)
clasificacionepub<- clasificacionepub %>% group_by(TIPOCALIFICACION) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(clasificacionepub$PONDERA)), sum(PONDERA), sum(clasificacionepub$PONDERA))
clasificacionepub
#Sector privado
clasificacionepr<- eph1t %>% filter(AGLOMERADO==12 & !is.na(CALIFICACION) & PP04A==2)
clasificacionepr<- clasificacionepr %>% group_by(TIPOCALIFICACION) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(clasificacionepr$PONDERA)),  sum(PONDERA), sum(clasificacionepr$PONDERA))
clasificacionepr
clasificacionepub
clasificacionepr
### Promedio de edad
promedioedad<- eph1t %>% filter(AGLOMERADO==12 &  OCUPADOS==1)
promedioedad<- promedioedad %>% group_by(EMPLEADOS) %>% summarise((CH06%*%PONDERA)/sum(PONDERA))
promedioedad
### Composición por sexo
#Sector público
composicionempleadospu <- eph1t %>% filter(AGLOMERADO==12 & !is.na(EMPLEADOS) & PP04A==1)
composicionempleadospu <- composicionempleadospu %>%  group_by(SEXO) %>%  summarise(sum(PONDERA))
composicionempleadospu <- composicionempleadospu %>% mutate(porcentaje=formattable::percent(`sum(PONDERA)`/sum(composicionempleadospu$`sum(PONDERA)`)),  Empleo= "Publico")
#Sector privado
composicionempleadospr <- eph1t %>% filter(AGLOMERADO==12 & !is.na(EMPLEADOS) & PP04A==2)
composicionempleadospr <- composicionempleadospr %>%  group_by(SEXO) %>%  summarise(sum(PONDERA))
composicionempleadospr <- composicionempleadospr %>% mutate(porcentaje=formattable::percent(`sum(PONDERA)`/sum(composicionempleadospr$`sum(PONDERA)`)), Empleo= "Privado")
composicionempleados <- bind_rows(composicionempleadospr, composicionempleadospu)
composicionempleados
composicionempleados
#Graficos
## EMPLEO PRIVADO
composicionempleadospr$ymax <- cumsum(composicionempleadospr$porcentaje)
composicionempleadospr$ymin <- formattable::percent(c(0, head(composicionempleadospr$ymax, n=-1)))
composicionempleadospr$labelPosition <- (composicionempleadospr$ymax + composicionempleadospr$ymin) / 2
#Label
composicionempleadospr$label <- paste0(composicionempleadospr$SEXO, "\n ", composicionempleadospr$porcentaje)
dona1 <- ggplot(composicionempleadospr, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=SEXO)) +
geom_rect() +
geom_text( x=1.55, aes(y=labelPosition, label=label, color=SEXO), size=4) +
scale_fill_manual(values = c("#f4a018", "#e22172")) +
scale_colour_manual(values=c("#f4a018", "#e22172")) +
coord_polar(theta="y") +
xlim(c(-1, 4)) +
labs(title = "Empleo privado", subtitle = "Primer trimestre de 2022", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con <br> datos obtenidos de INDEC.</span> ") +
theme_void() +
theme(legend.position = "none", text = element_text(family = "Open Sans"), plot.title =element_text(size = 14), plot.subtitle = element_text(size = 8), legend.text = element_text(size = 8), plot.caption = element_markdown(size=8))
dona1
ggsave("grafico6.1.svg")
#EMPLEO PUBLICO
composicionempleadospu$ymax <- cumsum(composicionempleadospu$porcentaje)
composicionempleadospu$ymin <- formattable::percent(c(0, head(composicionempleadospu$ymax, n=-1)))
composicionempleadospu$labelPosition <- (composicionempleadospu$ymax + composicionempleadospu$ymin) / 2
composicionempleadospu$label <- paste0(composicionempleadospu$SEXO, "\n ", composicionempleadospu$porcentaje)
dona2 <- ggplot(composicionempleadospu, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=SEXO)) +
geom_rect() +
geom_text( x=1.55, aes(y=labelPosition, label=label, color=SEXO), size=4) +
scale_fill_manual(values = c("#29aee4","#0c8136")) +
scale_colour_manual(values=c("#29aee4","#0c8136")) +
coord_polar(theta="y") +
xlim(c(-1, 4)) +
labs(title = "Empleo público", subtitle = "Primer trimestre de 2022", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con <br> datos obtenidos de INDEC.</span> ") +
theme_void() +
theme(legend.position = "none", text = element_text(family = "Open Sans"), plot.title =element_text(size = 14), plot.subtitle = element_text(size = 8), legend.text = element_text(size = 8), plot.caption = element_markdown(size=8))
ggsave("grafico6.2.svg")
figure <- ggarrange(dona1, dona2, ncol = 2, nrow = 1)
figure
### Composición por sectores de actividad del sector público
caract<- eph1t %>% group_by(SECTOR) %>% filter(OCUPADOS==1) %>% count()
#table(sectores_eph4t$SECTOR_ACT)
spublico<- sectores_eph1t %>% filter(AGLOMERADO==12 & PP04A==1)
spublico <- spublico %>% group_by(SECTOR_ACT) %>% summarise(proporcion=(sum(PONDERA)/sum(spublico$PONDERA)), cantidad=sum(PONDERA)) %>% arrange(-proporcion)
spublico
spublico
#Gráfico 7
grafspublico <- spublico %>% mutate(principal=case_when(proporcion<0.10 ~"Otros",
T ~ as.character(SECTOR_ACT)))
grafspublico <- grafspublico %>% group_by(principal) %>% summarise(porcentaje=formattable::percent(sum(proporcion))) %>% arrange(-porcentaje)
grafspublico$principal[grafspublico$principal %in% "ADMINISTRACIÓN PÚBLICA Y DEFENSA; PLANES DE SEGURO SOCIAL OBLIGATORIO"] <- "ADMIN. PÚBLICA Y DEFENSA;  \nPLANES DE SEGURO SOCIAL OBLIGATORIO"
grafspublico$principal[grafspublico$principal %in% "SALUD HUMANA Y SERVICIOS SOCIALES"] <- "SALUD HUMANA Y \nSERVICIOS SOCIALES"
grafico7 <- grafspublico %>% ggplot(aes(area = porcentaje , label =paste(principal, porcentaje,sep = "|"), fill=principal)) +
geom_treemap(show.legend = F) + geom_treemap_text(show.legend = F,min.size = 2, family="Open Sans", grow = TRUE, colour = "white", place = "center") + scale_fill_manual(values=colores)+ labs(title = "Composición del sector público", subtitle = "Primer trimestre de 2022", fill="", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +  theme(text = element_text(family = "Open Sans"),plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), aspect.ratio = 0.7, plot.background = element_blank(),panel.grid.major = element_blank() ,panel.grid.minor = element_blank(), panel.border = element_blank(), plot.caption = element_markdown(size=8))
grafico7
ggsave("grafico7.svg")
### Total
informalidadtot<- eph1t %>% filter(AGLOMERADO==12 & !is.na(INFORMALES))
informalidadtot<- informalidadtot %>% group_by(INFORMALES) %>% summarise(sum(PONDERA)/sum(informalidadtot$PONDERA), sum(PONDERA))
informalidadtot
### Por sexo
#Mujeres
informalidad<- eph1t %>% filter(AGLOMERADO==12 & !is.na(INFORMALES))
informales<- informalidad %>% filter(CH04==2)
informales1<- informales %>% group_by(INFORMALES) %>% summarise(sum(PONDERA)/sum(informales$PONDERA), sum(PONDERA))
informales1
#Hombres
informalidad<- eph1t %>% filter(AGLOMERADO==12 & !is.na(INFORMALES))
informales<- informalidad %>% filter(CH04==1)
informales1<- informales %>% group_by(INFORMALES) %>% summarise(sum(PONDERA)/sum(informales$PONDERA))
informales1
### Informalidad por edad y sexo
#15-24 años
#Hombres
hombres <- eph1t %>%  filter(CH04==1 & AGLOMERADO==12 & ESTADO!=0 & CH06<=24 & CH06>=15 & !is.na(INFORMALES))
hombres <- hombres %>%  group_by(INFORMALES) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(hombres$PONDERA)), Sexo="Hombres", Edad="15-24 años")%>% filter(INFORMALES==1)
#Mujeres
mujeres <- eph1t %>%  filter(CH04==2 & AGLOMERADO==12 & ESTADO!=0 & CH06<=24 & CH06>=15 & !is.na(INFORMALES))
mujeres <- mujeres %>%  group_by(INFORMALES) %>%  summarise (porcentaje=formattable::percent(sum(PONDERA)/sum(mujeres$PONDERA)), Sexo="Mujeres", Edad="15-24 años")%>% filter(INFORMALES==1)
mujeres
inf15 <- bind_rows(hombres, mujeres)
#25-34 años
#Hombres
hombres <- eph1t %>%  filter(CH04==1 & AGLOMERADO==12 & ESTADO!=0 & CH06<=34 & CH06>=25 & !is.na(INFORMALES))
hombres <- hombres %>%  group_by(INFORMALES) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(hombres$PONDERA)), Sexo="Hombres", Edad="25-34 años") %>% filter(INFORMALES==1)
#Mujeres
mujeres <- eph1t %>%  filter(CH04==2 & AGLOMERADO==12 & ESTADO!=0 & CH06<=34 & CH06>=25 & !is.na(INFORMALES))
mujeres <- mujeres %>%  group_by(INFORMALES) %>%  summarise (porcentaje=formattable::percent(sum(PONDERA)/sum(mujeres$PONDERA)), Sexo="Mujeres", Edad="25-34 años")%>% filter(INFORMALES==1)
inf25 <- bind_rows(hombres, mujeres)
#35-44
#Hombres
hombres <- eph1t %>%  filter(CH04==1 & AGLOMERADO==12 & ESTADO!=0 & CH06<=44 & CH06>=35 & !is.na(INFORMALES))
hombres <- hombres %>%  group_by(INFORMALES) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(hombres$PONDERA)), Sexo="Hombres", Edad="35-44 años")%>% filter(INFORMALES==1)
#Mujeres
mujeres <- eph1t %>%  filter(CH04==2 & AGLOMERADO==12 & ESTADO!=0 & CH06<=44 & CH06>=35 & !is.na(INFORMALES))
mujeres <- mujeres %>%  group_by(INFORMALES) %>%  summarise (porcentaje=formattable::percent(sum(PONDERA)/sum(mujeres$PONDERA)), Sexo="Mujeres", Edad="35-44 años")%>% filter(INFORMALES==1)
inf35 <- bind_rows(hombres, mujeres)
#45-59
edad45a59 <- eph1t %>% filter(AGLOMERADO==12 & ESTADO!=0 & CH06<=59 & CH06>=45 & !is.na(INFORMALES))
#Hombres
hombres <- eph1t %>%  filter(CH04==1 & AGLOMERADO==12 & ESTADO!=0 & CH06<=59 & CH06>=45 & !is.na(INFORMALES))
hombres <- hombres %>%  group_by(INFORMALES) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(hombres$PONDERA)), Sexo="Hombres", Edad="45-59 años")%>% filter(INFORMALES==1)
#Mujeres
mujeres <- eph1t %>%  filter(CH04==2 & AGLOMERADO==12 & ESTADO!=0 & CH06<=59 & CH06>=45 & !is.na(INFORMALES))
mujeres <- mujeres %>%  group_by(INFORMALES) %>%  summarise (porcentaje=formattable::percent(sum(PONDERA)/sum(mujeres$PONDERA)), Sexo="Mujeres", Edad="45-59 años")%>% filter(INFORMALES==1)
inf45 <- bind_rows(hombres, mujeres)
#Mayores o iguales a 60 años
edad60 <- eph1t %>% filter(AGLOMERADO==12 & ESTADO!=0 & CH06>=60 & !is.na(INFORMALES))
#Hombres
hombres <- eph1t %>%  filter(CH04==1 & AGLOMERADO==12 & ESTADO!=0 & CH06>=60 & !is.na(INFORMALES))
hombres <- hombres %>%  group_by(INFORMALES) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(hombres$PONDERA)), Sexo="Hombres", Edad="+60 años") %>% filter(INFORMALES==1)
#Mujeres
mujeres <- eph1t %>%  filter(CH04==2 & AGLOMERADO==12 & ESTADO!=0 & CH06>=60 & !is.na(INFORMALES))
mujeres <- mujeres %>%  group_by(INFORMALES) %>%  summarise (porcentaje=formattable::percent(sum(PONDERA)/sum(mujeres$PONDERA)), Sexo="Mujeres", Edad="+60 años") %>% filter(INFORMALES==1)
inf60 <- bind_rows(hombres, mujeres)
infgraf <- bind_rows(inf15, inf25, inf35, inf45, inf60)
infgraf
#Tabla
tablakg_5 <- infgraf %>% select(-INFORMALES) %>%  pivot_wider(names_from = Sexo, values_from = porcentaje)
tablakg_5 %>%
kbl(caption="Informalidad laboral por sexo y edad", booktabs = T) %>%
kable_styling(latex_options = c("striped", "hover", "condensed"), font_size = 9, position = "center") %>%
row_spec(0, color = "white", bold = TRUE, background="#29aee4", font_size = 12) %>%
row_spec(seq(1,nrow(tablakg_5),2), background="#F0FFFF")  %>%
column_spec(1, width = "18em") %>%
column_spec(2, width = "14em") %>%
column_spec(3, width = "14em") %>%
sub("\\\\toprule", "", .) %>%  #saca las lineas negras de los bordes
sub("\\\\bottomrule", "", .)
#Grafico
graficoinf <- infgraf %>% ggplot(mapping = aes(x=Edad, y=porcentaje, fill=Sexo)) +
geom_chicklet(position = position_dodge(width = 0.75), width=0.7, show.legend = F) +
scale_fill_manual(values=colores) + scale_y_continuous(labels = percent, limits = c(0,1)) +
labs(y = "Tasa de informalidad laboral", title ="Informalidad laboral por edad para <span style = 'color: #29aee4;'>**hombres**</span> y <span style='color: #0c8136;'>**mujeres**</span> ", subtitle ="Primer trimestre de 2022", x = "", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
theme(text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot", plot.subtitle = element_text(size = 8), axis.title = element_text(size=8), legend.position = "bottom", legend.text = element_text(size = 8), legend.title = element_blank(), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(), plot.caption = element_markdown(size=8))
graficoinf
ggsave("graficoinf.svg")
### Tasa de informalidad laboral desagregada por sector de actividad
caract<- ephtotalsd %>% group_by(SECTOR) %>% filter(OCUPADOS==1) %>% count()
table(sectores_ephtotal$SECTOR_ACT)
inforporsector<- function(i) {
infor <- sectores_ephtotal %>% filter(AGLOMERADO==12  & !is.na(INFORMALES) & SECTOR_ACT==i)
infor <- infor %>% group_by(INFORMALES) %>%  summarise(SECTOR=i, porcentaje=sum(PONDERA)/sum(infor$PONDERA))
return(infor)
}
nombres<-(unique(sectores_ephtotal$SECTOR_ACT))
#c((lapply(nombres, inforporsector))) -> aplica una función a cada elemento de una lista o vector
informalidad_sectores <- bind_rows(lapply(nombres, inforporsector))
#Gráfico sectores con mas informalidad
informalidad_sectores <- informalidad_sectores %>% filter(INFORMALES==1) %>% arrange(-porcentaje)
informalidad_sectores <-informalidad_sectores[1:5,]
informalidad_sectores <- informalidad_sectores %>%
mutate(SECTOR= case_when(SECTOR=="ACTIVIDADES DE LOS HOGARES COMO EMPLEADORES DE
PERSONAL DOMÉSTICO" ~ "PERSONAL DOMESTICO",
SECTOR=="ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS" ~ "ACTIVIDADES \nCIENTÍFICAS Y TÉCNICAS",
SECTOR=="ARTES, ENTRETENIMIENTO Y RECREACIÓN" ~ "ARTES, ENTRETENIMIENTO \nY RECREACIÓN",
T ~ as.character(SECTOR)))%>%
mutate(SECTOR= fct_reorder(SECTOR, porcentaje))
grafico8 <- informalidad_sectores %>% ggplot(mapping = aes(x=SECTOR, y=porcentaje)) +
geom_segment(aes(x=SECTOR, xend=SECTOR, y=0, yend=porcentaje), color= colores[2], size=1.05) +
geom_point(size=3.5, color=colores[1]) + coord_flip() +
labs(x="", y="", title = "Sectores con mayor informalidad", subtitle = "Primer trimestre de 2022", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
scale_y_continuous(labels = percent, limits = c(0,1)) +
theme(text = element_text(family = "Open Sans"), plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), plot.title.position = "plot", panel.background = element_blank(), axis.text = element_text(size = 8), axis.title.x = element_text(size = 8), plot.caption = element_markdown(size=8))
grafico8
ggsave("grafico8.svg")
#Gráfico sectores con menos informalidad
menor_informalidad <- bind_rows(lapply(nombres, inforporsector))
menor_informalidad <- menor_informalidad %>% filter(INFORMALES==1) %>% arrange(porcentaje)
menor_informalidad <-menor_informalidad[1:5,]
menor_informalidad <- menor_informalidad %>%
mutate(SECTOR= case_when(SECTOR=="ADMINISTRACIÓN PÚBLICA Y DEFENSA; PLANES DE SEGURO SOCIAL OBLIGATORIO" ~ "ADMINISTRACIÓN PÚBLICA Y  \nDEFENSA;",
SECTOR=="ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS" ~ "ACTIVIDADES \nCIENTÍFICAS Y TÉCNICAS",
SECTOR=="SUMINISTRO DE AGUA; ALCANTARILLADO, GESTIÓN DE DESECHOS Y ACTIVIDADES DE SANEAMIENTO" ~ "SUMINISTRO DE AGUA \nENTRE OTROS",
SECTOR=="ACTIVIDADES DE ORGANIZACIONES Y ORGANISMOS
EXTRATERRITORIALES" ~ "ACT. ORGANISMOS \nEXTRATERRITORIALES",
SECTOR=="INFORMACIÓN Y COMUNICACIÓN" ~ "INFORMACIÓN Y \nCOMUNICACIÓN",
T ~ as.character(SECTOR)))%>%
mutate(SECTOR= fct_reorder(SECTOR, -porcentaje))
grafico9 <- menor_informalidad %>%  ggplot(mapping = aes(x=SECTOR, y=porcentaje)) +
geom_segment(aes(x=SECTOR, xend=SECTOR, y=0, yend=porcentaje), color= colores[2], size=1.05) +
geom_point(size=3.5, color=colores[1]) + coord_flip() +
labs(x="", y="", title = "Sectores con menor informalidad", subtitle = "Primer trimestre de 2022", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
scale_y_continuous(labels = percent, limits = c(0,0.35)) +
theme(text = element_text(family = "Open Sans"), plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), plot.title.position = "plot", panel.background = element_blank(), axis.text = element_text(size = 8), axis.title.x = element_text(size = 8), plot.caption = element_markdown(size = 8))
grafico9
ggsave("grafico9.svg")
grafico9 <- menor_informalidad %>%  ggplot(mapping = aes(x=SECTOR, y=porcentaje)) +
geom_segment(aes(x=SECTOR, xend=SECTOR, y=0, yend=porcentaje), color= colores[2], size=1.05) +
geom_point(size=3.5, color=colores[1]) + coord_flip() +
labs(x="", y="", title = "Sectores con menor informalidad", subtitle = "Primer trimestre de 2022", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
scale_y_continuous(labels = percent, limits = c(0,0.55)) +
theme(text = element_text(family = "Open Sans"), plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), plot.title.position = "plot", panel.background = element_blank(), axis.text = element_text(size = 8), axis.title.x = element_text(size = 8), plot.caption = element_markdown(size = 8))
grafico9
grafico9 <- menor_informalidad %>%  ggplot(mapping = aes(x=SECTOR, y=porcentaje)) +
geom_segment(aes(x=SECTOR, xend=SECTOR, y=0, yend=porcentaje), color= colores[2], size=1.05) +
geom_point(size=3.5, color=colores[1]) + coord_flip() +
labs(x="", y="", title = "Sectores con menor informalidad", subtitle = "Primer trimestre de 2022", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
scale_y_continuous(labels = percent, limits = c(0,0.4)) +
theme(text = element_text(family = "Open Sans"), plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), plot.title.position = "plot", panel.background = element_blank(), axis.text = element_text(size = 8), axis.title.x = element_text(size = 8), plot.caption = element_markdown(size = 8))
grafico9
menor_informalidad
#Total de la población
pobcalificada<- eph1t %>% filter(AGLOMERADO==12 & !is.na(CALIFICACION))
pobcalificada<- pobcalificada %>% group_by(TIPOCALIFICACION) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(pobcalificada$PONDERA)),  sum(PONDERA), sum(pobcalificada$PONDERA))
pobcalificada
### Por sexo
#Hombres
calificacionhombres<- eph1t %>% filter(AGLOMERADO==12 & !is.na(CALIFICACION) & CH04==1)
calificacionhombres<- calificacionhombres %>% group_by(TIPOCALIFICACION) %>% summarise(formattable::percent(sum(PONDERA)/sum(calificacionhombres$PONDERA)), sum(PONDERA), sum(calificacionhombres$PONDERA))
calificacionhombres
#Mujeres
calificacionmujeres<- eph1t %>% filter(AGLOMERADO==12 & !is.na(CALIFICACION) & CH04==2)
calificacionmujeres<- calificacionmujeres %>% group_by(TIPOCALIFICACION) %>% summarise(percent(sum(PONDERA)/sum(calificacionmujeres$PONDERA)), sum(PONDERA), sum(calificacionmujeres$PONDERA))
calificacionmujeres
#Total de la población
pobcalificada<- eph1t %>% filter(AGLOMERADO==12 & !is.na(CALIFICACION))
pobcalificada<- pobcalificada %>% group_by(TIPOCALIFICACION) %>% summarise(porcentaje=formattable::percent(sum(PONDERA)/sum(pobcalificada$PONDERA)),  sum(PONDERA), sum(pobcalificada$PONDERA))
pobcalificada
pobcalificada
calificacionhombres
calificacionmujeres
### Calificación desagregada por sectores de actividad económica
califporsector<- function(i) {
calif <- sectores_ephtotal %>% filter(AGLOMERADO==12  & !is.na(TIPOCALIFICACION) & SECTOR_ACT==i)
calif <- calif %>% group_by(TIPOCALIFICACION) %>%  summarise(SECTOR=i, porcentaje=formattable::percent(sum(PONDERA)/sum(calif$PONDERA), digits=2))
return(calif)
}
calificacion_sectores <- bind_rows(lapply(nombres, califporsector))
calificacion_sectores
#Grafico
calificacion_sectores <- calificacion_sectores %>% filter(TIPOCALIFICACION=="Calificado") %>% arrange(-porcentaje)
calificacion_sectores <-calificacion_sectores[1:5,]
calificacion_sectores <- calificacion_sectores %>%
mutate(SECTOR= case_when(SECTOR=="ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS" ~ "ACTIVIDADES \nCIENTÍFICAS Y TÉCNICAS",
SECTOR=="ARTES, ENTRETENIMIENTO Y RECREACIÓN" ~ "ARTE, ENTRETENIMIENTO \nY RECREACIÓN",
SECTOR=="SALUD HUMANA Y SERVICIOS SOCIALES" ~ "SALUD HUMANA Y \nSERVICIOS SOCIALES",
SECTOR=="INFORMACIÓN Y COMUNICACIÓN" ~ "INFORMACIÓN Y \nCOMUNICACIÓN",
T ~ as.character(SECTOR)))%>%
mutate(SECTOR= fct_reorder(SECTOR, -porcentaje))
calificacion_sectores %>% ggplot(aes(area = porcentaje , label =paste(SECTOR, porcentaje,sep = "  "), fill=SECTOR)) +
geom_treemap(show.legend = F) +
geom_treemap_text(show.legend = F,min.size = 2, family="Open Sans", grow = TRUE, colour = "white", place = "center") +
scale_fill_manual(values=colores) +
labs(title = "Sectores con mayor calificación", subtitle = "Primer trimestre de 2022", fill="", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
theme(text = element_text(family = "Open Sans"),plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), aspect.ratio = 0.7, plot.background = element_blank(),panel.grid.major = element_blank() ,panel.grid.minor = element_blank(), panel.border = element_blank(), plot.caption = element_markdown(size=8))
ggsave("grafico10.svg")
#Grafico
calificacion_sectores <- calificacion_sectores %>% filter(TIPOCALIFICACION=="Calificado") %>% arrange(-porcentaje)
calificacion_sectores <-calificacion_sectores[2:6,] #dsps cambiar pq este trim esta afectado por uno con un solo valor. Hay q ver como manejar eso
calificacion_sectores <- calificacion_sectores %>%
mutate(SECTOR= case_when(SECTOR=="ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS" ~ "ACTIVIDADES \nCIENTÍFICAS Y TÉCNICAS",
SECTOR=="ARTES, ENTRETENIMIENTO Y RECREACIÓN" ~ "ARTE, ENTRETENIMIENTO \nY RECREACIÓN",
SECTOR=="SALUD HUMANA Y SERVICIOS SOCIALES" ~ "SALUD HUMANA Y \nSERVICIOS SOCIALES",
SECTOR=="INFORMACIÓN Y COMUNICACIÓN" ~ "INFORMACIÓN Y \nCOMUNICACIÓN",
T ~ as.character(SECTOR)))%>%
mutate(SECTOR= fct_reorder(SECTOR, -porcentaje))
calificacion_sectores %>% ggplot(aes(area = porcentaje , label =paste(SECTOR, porcentaje,sep = "  "), fill=SECTOR)) +
geom_treemap(show.legend = F) +
geom_treemap_text(show.legend = F,min.size = 2, family="Open Sans", grow = TRUE, colour = "white", place = "center") +
scale_fill_manual(values=colores) +
labs(title = "Sectores con mayor calificación", subtitle = "Primer trimestre de 2022", fill="", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
theme(text = element_text(family = "Open Sans"),plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), aspect.ratio = 0.7, plot.background = element_blank(),panel.grid.major = element_blank() ,panel.grid.minor = element_blank(), panel.border = element_blank(), plot.caption = element_markdown(size=8))
ggsave("grafico10.svg")
#Grafico
calificacion_sectores <- calificacion_sectores %>% filter(TIPOCALIFICACION=="Calificado") %>% arrange(-porcentaje)
calificacion_sectores <-calificacion_sectores[2:7,] #dsps cambiar pq este trim esta afectado por uno con un solo valor. Hay q ver como manejar eso
calificacion_sectores <- calificacion_sectores %>%
mutate(SECTOR= case_when(SECTOR=="ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS" ~ "ACTIVIDADES \nCIENTÍFICAS Y TÉCNICAS",
SECTOR=="ARTES, ENTRETENIMIENTO Y RECREACIÓN" ~ "ARTE, ENTRETENIMIENTO \nY RECREACIÓN",
SECTOR=="SALUD HUMANA Y SERVICIOS SOCIALES" ~ "SALUD HUMANA Y \nSERVICIOS SOCIALES",
SECTOR=="INFORMACIÓN Y COMUNICACIÓN" ~ "INFORMACIÓN Y \nCOMUNICACIÓN",
T ~ as.character(SECTOR)))%>%
mutate(SECTOR= fct_reorder(SECTOR, -porcentaje))
calificacion_sectores %>% ggplot(aes(area = porcentaje , label =paste(SECTOR, porcentaje,sep = "  "), fill=SECTOR)) +
geom_treemap(show.legend = F) +
geom_treemap_text(show.legend = F,min.size = 2, family="Open Sans", grow = TRUE, colour = "white", place = "center") +
scale_fill_manual(values=colores) +
labs(title = "Sectores con mayor calificación", subtitle = "Primer trimestre de 2022", fill="", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
theme(text = element_text(family = "Open Sans"),plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), aspect.ratio = 0.7, plot.background = element_blank(),panel.grid.major = element_blank() ,panel.grid.minor = element_blank(), panel.border = element_blank(), plot.caption = element_markdown(size=8))
ggsave("grafico10.svg")
#Grafico
calificacion_sectores <- calificacion_sectores %>% filter(TIPOCALIFICACION=="Calificado") %>% arrange(-porcentaje)
calificacion_sectores <-calificacion_sectores[1:5,2] #dsps cambiar pq este trim esta afectado por uno con un solo valor. Hay q ver como manejar eso
calificacion_sectores <- calificacion_sectores %>%
mutate(SECTOR= case_when(SECTOR=="ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS" ~ "ACTIVIDADES \nCIENTÍFICAS Y TÉCNICAS",
SECTOR=="ARTES, ENTRETENIMIENTO Y RECREACIÓN" ~ "ARTE, ENTRETENIMIENTO \nY RECREACIÓN",
SECTOR=="SALUD HUMANA Y SERVICIOS SOCIALES" ~ "SALUD HUMANA Y \nSERVICIOS SOCIALES",
SECTOR=="INFORMACIÓN Y COMUNICACIÓN" ~ "INFORMACIÓN Y \nCOMUNICACIÓN",
T ~ as.character(SECTOR)))%>%
mutate(SECTOR= fct_reorder(SECTOR, -porcentaje))
calificacion_sectores <- calificacion_sectores %>% filter(TIPOCALIFICACION=="Calificado") %>% arrange(-porcentaje)
calificacion_sectores
califporsector<- function(i) {
calif <- sectores_ephtotal %>% filter(AGLOMERADO==12  & !is.na(TIPOCALIFICACION) & SECTOR_ACT==i)
calif <- calif %>% group_by(TIPOCALIFICACION) %>%  summarise(SECTOR=i, porcentaje=formattable::percent(sum(PONDERA)/sum(calif$PONDERA), digits=2))
return(calif)
}
calificacion_sectores <- bind_rows(lapply(nombres, califporsector))
calificacion_sectores <- calificacion_sectores %>% filter(TIPOCALIFICACION=="Calificado") %>% arrange(-porcentaje)
calificacion_sectores <-calificacion_sectores[2:6,] #dsps cambiar pq este trim esta afectado por uno con un solo valor. Hay q ver como manejar eso
calificacion_sectores
calificacion_sectores <- calificacion_sectores %>%
mutate(SECTOR= case_when(SECTOR=="ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS" ~ "ACTIVIDADES \nCIENTÍFICAS Y TÉCNICAS",
SECTOR=="ARTES, ENTRETENIMIENTO Y RECREACIÓN" ~ "ARTE, ENTRETENIMIENTO \nY RECREACIÓN",
SECTOR=="SALUD HUMANA Y SERVICIOS SOCIALES" ~ "SALUD HUMANA Y \nSERVICIOS SOCIALES",
SECTOR=="INFORMACIÓN Y COMUNICACIÓN" ~ "INFORMACIÓN Y \nCOMUNICACIÓN",
T ~ as.character(SECTOR)))%>%
mutate(SECTOR= fct_reorder(SECTOR, -porcentaje))
calificacion_sectores %>% ggplot(aes(area = porcentaje , label =paste(SECTOR, porcentaje,sep = "  "), fill=SECTOR)) +
geom_treemap(show.legend = F) +
geom_treemap_text(show.legend = F,min.size = 2, family="Open Sans", grow = TRUE, colour = "white", place = "center") +
scale_fill_manual(values=colores) +
labs(title = "Sectores con mayor calificación", subtitle = "Primer trimestre de 2022", fill="", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
theme(text = element_text(family = "Open Sans"),plot.title = element_text(size = 14), plot.subtitle = element_text(size = 8), aspect.ratio = 0.7, plot.background = element_blank(),panel.grid.major = element_blank() ,panel.grid.minor = element_blank(), panel.border = element_blank(), plot.caption = element_markdown(size=8))
ggsave("grafico10.svg")
